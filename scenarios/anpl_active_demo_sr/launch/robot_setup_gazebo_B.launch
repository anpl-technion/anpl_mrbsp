<launch>
    
  <!-- Parameters to change each time-->
  <arg name="current_scenario"  default="anpl_active_demo_sr" />

  <arg name="scenario_dir"      default="$(eval find(current_scenario))" />
  <arg name="config_files_dir"  default="$(arg scenario_dir)/config_files" />
  <arg name="robot_name" default="Robot_B" />
  <arg name="odometry_type"     default="odometry_external"/> <!-- odometry_icp_laser|odometry_external-->

  <!-- Putting the time back to real time-->
  <rosparam> /use_sim_time : false </rosparam>
  <param name="scenario_folder" value="$(arg scenario_dir)/$(arg current_scenario)"/>

  <node pkg="odometry" type="$(arg odometry_type)" name="$(arg robot_name)" clear_params="true" output="screen" > <!-- launch-prefix="xterm -e gdb -ex run [MinusMinus]args" -->
    <rosparam command="load" file="$(arg config_files_dir)/gazebo_robot_B.yaml" />
  </node>


  <!-- -remapping /mobile_base/commands/velocity causes Gazebo problems, teleporting the robot to (0,0), run in separate terminal controller_setup_gazebo_A.launch -->
  <!-- path following (pure pursuit) with obstacle avoidance (vector field histogram) -->
    <node pkg="pure_pursuit_with_vfh" type="pure_pursuit_with_vfh_node" name="$(arg robot_name)_controller_pioneer" output="screen" launch-prefix="xterm -e">
      <remap from="/current_pose" to="$(arg robot_name)/odometry"/>
      <remap from="/next_waypoint" to="$(arg robot_name)/next_waypoint"/>
      <remap from="/scan" to="/pioneer1/laser/scan"/>
      <remap from="/mobile_base/commands/velocity" to="/pioneer1/cmd_vel"/> 
      
      
      <rosparam command="load" file="$(find pure_pursuit_with_vfh)/config/default.yaml" />
  
    </node>


<group ns="$(arg robot_name)">
  <node pkg="state_machine" type="state_machine_default_node" name="state_machine_default" clear_params="true" output="screen">
    <rosparam command="load" file="$(arg config_files_dir)/state_machine_default.yaml" />
    <!-- Load robot goals -->
    <rosparam command="load" file="$(arg config_files_dir)/gazebo_Robot_B_goals.yaml" />
  </node>

  <!-- start in GDB -->
  <!--node pkg="collision_detection_node" type="collosion_detection_octomap" name="$(arg robot_name)_collision_detector" clear_params="true" output="screen" launch-prefix="xterm -e gdb -ex run [MinusMinus]args" -->
  <node pkg="collision_detection" type="collosion_detection_octomap" name="collision_detector" clear_params="true" output="screen">
  
    <rosparam command="load" file="$(arg config_files_dir)/collision_detector_octomap_gazebo_B.yaml" />
  </node>

</group>


  <!-- Create static transformation between the laser frame id to the robot pose for laser drawing in rviz -->
  <node pkg="tf" type="static_transform_publisher" name="$(arg robot_name)_laser_link" args="0.27 -0.03 0.13 0 0 0 1 pioneer1/base_link pioneer1/hokuyo_link 10" />

  <node pkg="tf" type="static_transform_publisher" name="$(arg robot_name)_base_link" args="0.0 0.0 0 0 0 0 1 $(arg robot_name) pioneer1/odom 10" />

  </launch>
