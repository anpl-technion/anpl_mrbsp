<launch>
    
  <!-- Parameters to change each time-->
  <arg name="researcher_name"   default="Andrej_Kitanov" />
  <arg name="current_scenario"  default="topological_mr_active" />

  <arg name="scenario_dir"      default="$(eval find(current_scenario))" />
  <arg name="config_files_dir"  default="$(arg scenario_dir)/config_files" />
  <arg name="robot_name" default="Robot_B" />

  <!-- Putting the time back to real time-->
  <rosparam> /use_sim_time : false </rosparam>
  <param name="scenario_folder" value="$(arg scenario_dir)/$(arg current_scenario)"/>

  <node pkg="odometry_node" type="odometry_laser_node" name="$(arg robot_name)" clear_params="true" output="log">
    <rosparam command="load" file="$(arg config_files_dir)/gazebo_robot_B.yaml" />
  </node>

  <group ns="$(arg robot_name)">
    <node pkg="state_machine_node" type="state_machine_default_node" name="state_machine_default" clear_params="true" output="screen">
      <rosparam command="load" file="$(arg config_files_dir)/state_machine_default.yaml" />
      <param name="robot_id" value="B"/>
      <param name="robot_name" value="pioneer2"/>
      <!-- Load robot goals -->
      <rosparam command="load" file="$(arg config_files_dir)/gazebo_Robot_B_goals.yaml" />
    </node>

    <node pkg="collision_detection_node" type="collosion_detection_octomap" name="collision_detector" clear_params="true" output="screen">
      <rosparam command="load" file="$(arg config_files_dir)/collision_detector_octomap_gazebo_B.yaml" />
    </node>
  </group>

  <!-- Create static transformation between the laser frame id to the robot pose for laser drawing in rviz -->
  <node pkg="tf" type="static_transform_publisher" name="$(arg robot_name)_laser_link" args="0.27 -0.03 0.13 0 0 0 1 pioneer2/base_link pioneer2/hokuyo_link 10" />

  <node pkg="tf" type="static_transform_publisher" name="$(arg robot_name)_base_link" args="0.0 0.0 0 0 0 0 1 $(arg robot_name) pioneer2/odom 10" />

  </launch>
